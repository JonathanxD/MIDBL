group 'com.github.jonathanxd'

apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8

jar {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
}

dependencies {
    compile project(path: ":Essential")
    compile 'com.github.JonathanxD:Redin:1.0.1'
    compile "com.github.JonathanxD:KoresProxy:2.5.3"
    compile "com.github.JonathanxD.Kores:Kores:4.0.0.44-beta"
    compile "com.github.JonathanxD.Kores-BytecodeWriter:Kores-BytecodeWriter:4.0.0.35-beta-bytecode"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: classes) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

license {
    ext.name = 'MIDBL-Extra'
    ext.organization = project.organization
    ext.description = project.description
    ext.url = project.url
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.email = 'jonathan.scripter@programmer.net'

    exclude "**/*.info"
    exclude "**/*.md"
    exclude "res/**"
    exclude "src/main/resources/**"
    exclude "src/test/resources/**"
    exclude "**/ASM*.java"
    exclude "**/TypeTools*.java"
    exclude "**/*.yml"

    header file('../LICENSE_HEADER')

    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

shadowJar {
    dependencies {
        //include(project(path: ":Essential", configuration: 'shadow'))
        // <Keep up to date with Essential shadow>
        include(dependency("com.github.JonathanxD:JwIUtils"))
        include(dependency("com.github.JonathanxD.JwIUtils:JwIUtils"))
        include(dependency("com.github.JonathanxD.JwIUtils:jwiutils-kt"))
        include(dependency("com.github.JonathanxD.JwIUtils:properties"))
        include(dependency("com.github.JonathanxD.JwIUtils:json-lang-loader"))
        include(dependency("com.github.JonathanxD:KWCommands"))
        include(dependency("com.github.JonathanxD:KWCommandsBukkit"))
        include(dependency("com.github.JonathanxD:Config"))
        include(dependency("com.github.JonathanxD.Config:Config"))
        include(dependency("com.github.JonathanxD.Config:Config-Json"))
        include(dependency("com.github.JonathanxD.Config:Config-Yaml"))
        include(dependency("com.github.JonathanxD:GUIHelper"))

        // Kotlin
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jre8"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))

        include(dependency("com.googlecode.json-simple:json-simple"))
        // </Keep up to date with Essential shadow>
        include(dependency("com.github.JonathanxD.Kores:Kores"))
        include(dependency("com.github.JonathanxD.Kores-BytecodeWriter:Kores-BytecodeWriter"))
        include(dependency("org.ow2.asm:asm-analysis"))
        include(dependency("org.ow2.asm:asm-util"))
        include(dependency("org.ow2.asm:asm-tree"))
        include(dependency("org.ow2.asm:asm"))
        include(dependency("com.github.JonathanxD:KoresProxy"))
        include(dependency("com.github.JonathanxD:Redin"))
        include(dependency("javax.inject:javax.inject"))
        include(project(path: ":Essential"))
    }
}
